(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[141],{kTG4:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),o=t.n(a),r=t("dEAq"),l=t("H1Ra"),s=o.a.memo((e=>{e.demos;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"webpack\u6253\u5305\u7684\u539f\u7406\u662f\u4ec0\u4e48\u804a\u4e00\u804ababel\u548c\u62bd\u8c61\u8bed\u6cd5\u6811\u5427"},o.a.createElement(r["AnchorLink"],{to:"#webpack\u6253\u5305\u7684\u539f\u7406\u662f\u4ec0\u4e48\u804a\u4e00\u804ababel\u548c\u62bd\u8c61\u8bed\u6cd5\u6811\u5427","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"webpack\u6253\u5305\u7684\u539f\u7406\u662f\u4ec0\u4e48?\u804a\u4e00\u804ababel\u548c\u62bd\u8c61\u8bed\u6cd5\u6811\u5427"),o.a.createElement("ul",null,o.a.createElement("li",null,o.a.createElement(r["Link"],{to:"https://astexplorer.net/"},"astexplorer"))),o.a.createElement("h2",{id:"1-indexjs"},o.a.createElement(r["AnchorLink"],{to:"#1-indexjs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"1 index.js"),o.a.createElement(l["a"],{code:"let title = require('./title.js');\nconsole.log(title);",lang:"js"}),o.a.createElement("h2",{id:"2-titlejs"},o.a.createElement(r["AnchorLink"],{to:"#2-titlejs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"2 title.js"),o.a.createElement(l["a"],{code:"module.exports = 'title';",lang:"js"}),o.a.createElement("h2",{id:"3-packerjs"},o.a.createElement(r["AnchorLink"],{to:"#3-packerjs","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"3 packer.js"),o.a.createElement(l["a"],{code:'const fs = require("fs");\nconst path = require("path");\nconst types = require("babel-types");\nconst parser = require("@babel/parser");\nconst traverse = require("@babel/traverse").default;\nconst generate = require("@babel/generator").default;\nconst baseDir = process.cwd().replace(/\\\\/g,path.posix.sep);\nconst entry = path.posix.join(baseDir, "src/index.js");\nlet modules = [];\nfunction buildModule(absolutePath){\n  const body = fs.readFileSync(absolutePath, "utf-8");\n  const ast = parser.parse(body, {\n    sourceType: "module",\n  });\n  const moduleId = "./" + path.posix.relative(baseDir, absolutePath);\n  const module = { id: moduleId };\n  const deps = [];\n  traverse(ast, {\n    CallExpression({ node }) {\n      if (node.callee.name === \'require\') {\n        node.callee.name = "__webpack_require__";\n        let moduleName = node.arguments[0].value;\n        const dirname = path.posix.dirname(absolutePath);\n        const depPath = path.posix.join(dirname, moduleName);\n        const depModuleId = "./" + path.posix.relative(baseDir, depPath);\n        node.callee.name = "__webpack_require__";\n        node.arguments = [types.stringLiteral(depModuleId)];\n        deps.push(buildModule(depPath));\n      }\n    }\n  });\n  let { code } = generate(ast);\n  module._source = code;\n  module.deps = deps;\n  modules.push(module);\n  return module;\n}\nlet entryModule = buildModule(entry);\nlet content = `\n(function (modules) {\n    function __webpack_require__(moduleId) {\n        var module = {\n            i: moduleId,\n            exports: {}\n        };\n        modules[moduleId].call(\n            module.exports,\n            module,\n            module.exports,\n            __webpack_require__\n        );\n        return module.exports;\n    }\n\n    return __webpack_require__("${entryModule.id}");\n})(\n    {\n      ${modules\n        .map(\n          (module) =>\n            `"${module.id}": function (module, exports,__webpack_require__) {${module._source}}`\n        )\n        .join(",")}\n    }\n);\n`;\n\nfs.writeFileSync("./dist/bundle.js", content);',lang:"js"})))}));n["default"]=e=>{var n=o.a.useContext(r["context"]),t=n.demos;return o.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&r["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(s,{demos:t})}}}]);